# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        bind:
            $projectDir: '%kernel.project_dir%'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Handlers\UploadHandler:
        arguments:
            $targetDirectory: '%kernel.project_dir%/public/images'

    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, label: Category}

    admin.news:
        class: App\Admin\NewsAdmin
        arguments: [~, App\Entity\News, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, label: News}

    admin.award:
        class: App\Admin\AwardAdmin
        arguments: [~, App\Entity\Award, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, label: Award}

    admin.disrict:
        class: App\Admin\DistrictAdmin
        arguments: [~, App\Entity\District, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, label: District}

    admin.shop:
        class: App\Admin\ShopAdmin
        arguments: [~, App\Entity\Shop, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, label: Shop}

    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, label: Product}

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, label: User}